// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: generated.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace LinNet {

  /// <summary>Holder for reflection information generated from generated.proto</summary>
  public static partial class GeneratedReflection {

    #region Descriptor
    /// <summary>File descriptor for generated.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static GeneratedReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg9nZW5lcmF0ZWQucHJvdG8SE2xpbi5nZW5lcmF0ZWQudGVzdDEaCWxpbi5w",
            "cm90bxobZ29vZ2xlL3Byb3RvYnVmL2VtcHR5LnByb3RvIi0KC1Rlc3REYXRh",
            "c2V0Eg4KBmZpZWxkMRgBIAEoCRIOCgZmaWVsZDIYAiABKAUiMQoPVGVzdERh",
            "dGFzZXRSZXNwEg4KBmZpZWxkMRgBIAEoCRIOCgZmaWVsZDIYAiABKAUihAEK",
            "FlRlc3REYXRhc2V0V2l0aExpbmVhZ2USMwoHcmVxdWVzdBgBIAEoCzIgLmxp",
            "bi5nZW5lcmF0ZWQudGVzdDEuVGVzdERhdGFzZXRIABItCg5kYXRhc2V0TGlu",
            "ZWFnZRgCIAEoCzITLmxpbi5EYXRhc2V0TGluZWFnZUgAQgYKBGNhc2UixQIK",
            "GlRlc3REYXRhc2V0UmVzcFdpdGhMaW5lYWdlEi0KDmRhdGFzZXRMaW5lYWdl",
            "GAEgASgLMhMubGluLkRhdGFzZXRMaW5lYWdlSAASMwoDcm93GAIgASgLMiQu",
            "bGluLmdlbmVyYXRlZC50ZXN0MS5UZXN0RGF0YXNldFJlc3BIABJSCgtyb3dS",
            "ZXNwb25zZRgDIAEoCzI7Lmxpbi5nZW5lcmF0ZWQudGVzdDEuVGVzdERhdGFz",
            "ZXRSZXNwV2l0aExpbmVhZ2UuUm93UmVzcG9uc2VIABplCgtSb3dSZXNwb25z",
            "ZRIxCgNyb3cYASADKAsyJC5saW4uZ2VuZXJhdGVkLnRlc3QxLlRlc3REYXRh",
            "c2V0UmVzcBIjCgpyb3dMaW5lYWdlGAIgAygLMg8ubGluLlJvd0xpbmVhZ2VC",
            "CAoGcmVzdWx0MpkCCgRDYWxjElEKA1J1bhIgLmxpbi5nZW5lcmF0ZWQudGVz",
            "dDEuVGVzdERhdGFzZXQaJC5saW4uZ2VuZXJhdGVkLnRlc3QxLlRlc3REYXRh",
            "c2V0UmVzcCgBMAEScgoOUnVuV2l0aExpbmVhZ2USKy5saW4uZ2VuZXJhdGVk",
            "LnRlc3QxLlRlc3REYXRhc2V0V2l0aExpbmVhZ2UaLy5saW4uZ2VuZXJhdGVk",
            "LnRlc3QxLlRlc3REYXRhc2V0UmVzcFdpdGhMaW5lYWdlKAEwARJKCgRFY2hv",
            "EiAubGluLmdlbmVyYXRlZC50ZXN0MS5UZXN0RGF0YXNldBogLmxpbi5nZW5l",
            "cmF0ZWQudGVzdDEuVGVzdERhdGFzZXRCCaoCBkxpbk5ldFAAUAFiBnByb3Rv",
            "Mw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::LinNet.LinReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.EmptyReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::LinNet.TestDataset), global::LinNet.TestDataset.Parser, new[]{ "Field1", "Field2" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LinNet.TestDatasetResp), global::LinNet.TestDatasetResp.Parser, new[]{ "Field1", "Field2" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LinNet.TestDatasetWithLineage), global::LinNet.TestDatasetWithLineage.Parser, new[]{ "Request", "DatasetLineage" }, new[]{ "Case" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LinNet.TestDatasetRespWithLineage), global::LinNet.TestDatasetRespWithLineage.Parser, new[]{ "DatasetLineage", "Row", "RowResponse" }, new[]{ "Result" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::LinNet.TestDatasetRespWithLineage.Types.RowResponse), global::LinNet.TestDatasetRespWithLineage.Types.RowResponse.Parser, new[]{ "Row", "RowLineage" }, null, null, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class TestDataset : pb::IMessage<TestDataset> {
    private static readonly pb::MessageParser<TestDataset> _parser = new pb::MessageParser<TestDataset>(() => new TestDataset());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TestDataset> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LinNet.GeneratedReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TestDataset() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TestDataset(TestDataset other) : this() {
      field1_ = other.field1_;
      field2_ = other.field2_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TestDataset Clone() {
      return new TestDataset(this);
    }

    /// <summary>Field number for the "field1" field.</summary>
    public const int Field1FieldNumber = 1;
    private string field1_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Field1 {
      get { return field1_; }
      set {
        field1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "field2" field.</summary>
    public const int Field2FieldNumber = 2;
    private int field2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Field2 {
      get { return field2_; }
      set {
        field2_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TestDataset);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TestDataset other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Field1 != other.Field1) return false;
      if (Field2 != other.Field2) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Field1.Length != 0) hash ^= Field1.GetHashCode();
      if (Field2 != 0) hash ^= Field2.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Field1.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Field1);
      }
      if (Field2 != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Field2);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Field1.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Field1);
      }
      if (Field2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Field2);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TestDataset other) {
      if (other == null) {
        return;
      }
      if (other.Field1.Length != 0) {
        Field1 = other.Field1;
      }
      if (other.Field2 != 0) {
        Field2 = other.Field2;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Field1 = input.ReadString();
            break;
          }
          case 16: {
            Field2 = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class TestDatasetResp : pb::IMessage<TestDatasetResp> {
    private static readonly pb::MessageParser<TestDatasetResp> _parser = new pb::MessageParser<TestDatasetResp>(() => new TestDatasetResp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TestDatasetResp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LinNet.GeneratedReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TestDatasetResp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TestDatasetResp(TestDatasetResp other) : this() {
      field1_ = other.field1_;
      field2_ = other.field2_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TestDatasetResp Clone() {
      return new TestDatasetResp(this);
    }

    /// <summary>Field number for the "field1" field.</summary>
    public const int Field1FieldNumber = 1;
    private string field1_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Field1 {
      get { return field1_; }
      set {
        field1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "field2" field.</summary>
    public const int Field2FieldNumber = 2;
    private int field2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Field2 {
      get { return field2_; }
      set {
        field2_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TestDatasetResp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TestDatasetResp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Field1 != other.Field1) return false;
      if (Field2 != other.Field2) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Field1.Length != 0) hash ^= Field1.GetHashCode();
      if (Field2 != 0) hash ^= Field2.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Field1.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Field1);
      }
      if (Field2 != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Field2);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Field1.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Field1);
      }
      if (Field2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Field2);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TestDatasetResp other) {
      if (other == null) {
        return;
      }
      if (other.Field1.Length != 0) {
        Field1 = other.Field1;
      }
      if (other.Field2 != 0) {
        Field2 = other.Field2;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Field1 = input.ReadString();
            break;
          }
          case 16: {
            Field2 = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class TestDatasetWithLineage : pb::IMessage<TestDatasetWithLineage> {
    private static readonly pb::MessageParser<TestDatasetWithLineage> _parser = new pb::MessageParser<TestDatasetWithLineage>(() => new TestDatasetWithLineage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TestDatasetWithLineage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LinNet.GeneratedReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TestDatasetWithLineage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TestDatasetWithLineage(TestDatasetWithLineage other) : this() {
      switch (other.CaseCase) {
        case CaseOneofCase.Request:
          Request = other.Request.Clone();
          break;
        case CaseOneofCase.DatasetLineage:
          DatasetLineage = other.DatasetLineage.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TestDatasetWithLineage Clone() {
      return new TestDatasetWithLineage(this);
    }

    /// <summary>Field number for the "request" field.</summary>
    public const int RequestFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::LinNet.TestDataset Request {
      get { return caseCase_ == CaseOneofCase.Request ? (global::LinNet.TestDataset) case_ : null; }
      set {
        case_ = value;
        caseCase_ = value == null ? CaseOneofCase.None : CaseOneofCase.Request;
      }
    }

    /// <summary>Field number for the "datasetLineage" field.</summary>
    public const int DatasetLineageFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::LinNet.DatasetLineage DatasetLineage {
      get { return caseCase_ == CaseOneofCase.DatasetLineage ? (global::LinNet.DatasetLineage) case_ : null; }
      set {
        case_ = value;
        caseCase_ = value == null ? CaseOneofCase.None : CaseOneofCase.DatasetLineage;
      }
    }

    private object case_;
    /// <summary>Enum of possible cases for the "case" oneof.</summary>
    public enum CaseOneofCase {
      None = 0,
      Request = 1,
      DatasetLineage = 2,
    }
    private CaseOneofCase caseCase_ = CaseOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CaseOneofCase CaseCase {
      get { return caseCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCase() {
      caseCase_ = CaseOneofCase.None;
      case_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TestDatasetWithLineage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TestDatasetWithLineage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Request, other.Request)) return false;
      if (!object.Equals(DatasetLineage, other.DatasetLineage)) return false;
      if (CaseCase != other.CaseCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (caseCase_ == CaseOneofCase.Request) hash ^= Request.GetHashCode();
      if (caseCase_ == CaseOneofCase.DatasetLineage) hash ^= DatasetLineage.GetHashCode();
      hash ^= (int) caseCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (caseCase_ == CaseOneofCase.Request) {
        output.WriteRawTag(10);
        output.WriteMessage(Request);
      }
      if (caseCase_ == CaseOneofCase.DatasetLineage) {
        output.WriteRawTag(18);
        output.WriteMessage(DatasetLineage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (caseCase_ == CaseOneofCase.Request) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Request);
      }
      if (caseCase_ == CaseOneofCase.DatasetLineage) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DatasetLineage);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TestDatasetWithLineage other) {
      if (other == null) {
        return;
      }
      switch (other.CaseCase) {
        case CaseOneofCase.Request:
          if (Request == null) {
            Request = new global::LinNet.TestDataset();
          }
          Request.MergeFrom(other.Request);
          break;
        case CaseOneofCase.DatasetLineage:
          if (DatasetLineage == null) {
            DatasetLineage = new global::LinNet.DatasetLineage();
          }
          DatasetLineage.MergeFrom(other.DatasetLineage);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::LinNet.TestDataset subBuilder = new global::LinNet.TestDataset();
            if (caseCase_ == CaseOneofCase.Request) {
              subBuilder.MergeFrom(Request);
            }
            input.ReadMessage(subBuilder);
            Request = subBuilder;
            break;
          }
          case 18: {
            global::LinNet.DatasetLineage subBuilder = new global::LinNet.DatasetLineage();
            if (caseCase_ == CaseOneofCase.DatasetLineage) {
              subBuilder.MergeFrom(DatasetLineage);
            }
            input.ReadMessage(subBuilder);
            DatasetLineage = subBuilder;
            break;
          }
        }
      }
    }

  }

  public sealed partial class TestDatasetRespWithLineage : pb::IMessage<TestDatasetRespWithLineage> {
    private static readonly pb::MessageParser<TestDatasetRespWithLineage> _parser = new pb::MessageParser<TestDatasetRespWithLineage>(() => new TestDatasetRespWithLineage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TestDatasetRespWithLineage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LinNet.GeneratedReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TestDatasetRespWithLineage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TestDatasetRespWithLineage(TestDatasetRespWithLineage other) : this() {
      switch (other.ResultCase) {
        case ResultOneofCase.DatasetLineage:
          DatasetLineage = other.DatasetLineage.Clone();
          break;
        case ResultOneofCase.Row:
          Row = other.Row.Clone();
          break;
        case ResultOneofCase.RowResponse:
          RowResponse = other.RowResponse.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TestDatasetRespWithLineage Clone() {
      return new TestDatasetRespWithLineage(this);
    }

    /// <summary>Field number for the "datasetLineage" field.</summary>
    public const int DatasetLineageFieldNumber = 1;
    /// <summary>
    /// First message only
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::LinNet.DatasetLineage DatasetLineage {
      get { return resultCase_ == ResultOneofCase.DatasetLineage ? (global::LinNet.DatasetLineage) result_ : null; }
      set {
        result_ = value;
        resultCase_ = value == null ? ResultOneofCase.None : ResultOneofCase.DatasetLineage;
      }
    }

    /// <summary>Field number for the "row" field.</summary>
    public const int RowFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::LinNet.TestDatasetResp Row {
      get { return resultCase_ == ResultOneofCase.Row ? (global::LinNet.TestDatasetResp) result_ : null; }
      set {
        result_ = value;
        resultCase_ = value == null ? ResultOneofCase.None : ResultOneofCase.Row;
      }
    }

    /// <summary>Field number for the "rowResponse" field.</summary>
    public const int RowResponseFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::LinNet.TestDatasetRespWithLineage.Types.RowResponse RowResponse {
      get { return resultCase_ == ResultOneofCase.RowResponse ? (global::LinNet.TestDatasetRespWithLineage.Types.RowResponse) result_ : null; }
      set {
        result_ = value;
        resultCase_ = value == null ? ResultOneofCase.None : ResultOneofCase.RowResponse;
      }
    }

    private object result_;
    /// <summary>Enum of possible cases for the "result" oneof.</summary>
    public enum ResultOneofCase {
      None = 0,
      DatasetLineage = 1,
      Row = 2,
      RowResponse = 3,
    }
    private ResultOneofCase resultCase_ = ResultOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResultOneofCase ResultCase {
      get { return resultCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearResult() {
      resultCase_ = ResultOneofCase.None;
      result_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TestDatasetRespWithLineage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TestDatasetRespWithLineage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(DatasetLineage, other.DatasetLineage)) return false;
      if (!object.Equals(Row, other.Row)) return false;
      if (!object.Equals(RowResponse, other.RowResponse)) return false;
      if (ResultCase != other.ResultCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (resultCase_ == ResultOneofCase.DatasetLineage) hash ^= DatasetLineage.GetHashCode();
      if (resultCase_ == ResultOneofCase.Row) hash ^= Row.GetHashCode();
      if (resultCase_ == ResultOneofCase.RowResponse) hash ^= RowResponse.GetHashCode();
      hash ^= (int) resultCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (resultCase_ == ResultOneofCase.DatasetLineage) {
        output.WriteRawTag(10);
        output.WriteMessage(DatasetLineage);
      }
      if (resultCase_ == ResultOneofCase.Row) {
        output.WriteRawTag(18);
        output.WriteMessage(Row);
      }
      if (resultCase_ == ResultOneofCase.RowResponse) {
        output.WriteRawTag(26);
        output.WriteMessage(RowResponse);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (resultCase_ == ResultOneofCase.DatasetLineage) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DatasetLineage);
      }
      if (resultCase_ == ResultOneofCase.Row) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Row);
      }
      if (resultCase_ == ResultOneofCase.RowResponse) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RowResponse);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TestDatasetRespWithLineage other) {
      if (other == null) {
        return;
      }
      switch (other.ResultCase) {
        case ResultOneofCase.DatasetLineage:
          if (DatasetLineage == null) {
            DatasetLineage = new global::LinNet.DatasetLineage();
          }
          DatasetLineage.MergeFrom(other.DatasetLineage);
          break;
        case ResultOneofCase.Row:
          if (Row == null) {
            Row = new global::LinNet.TestDatasetResp();
          }
          Row.MergeFrom(other.Row);
          break;
        case ResultOneofCase.RowResponse:
          if (RowResponse == null) {
            RowResponse = new global::LinNet.TestDatasetRespWithLineage.Types.RowResponse();
          }
          RowResponse.MergeFrom(other.RowResponse);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::LinNet.DatasetLineage subBuilder = new global::LinNet.DatasetLineage();
            if (resultCase_ == ResultOneofCase.DatasetLineage) {
              subBuilder.MergeFrom(DatasetLineage);
            }
            input.ReadMessage(subBuilder);
            DatasetLineage = subBuilder;
            break;
          }
          case 18: {
            global::LinNet.TestDatasetResp subBuilder = new global::LinNet.TestDatasetResp();
            if (resultCase_ == ResultOneofCase.Row) {
              subBuilder.MergeFrom(Row);
            }
            input.ReadMessage(subBuilder);
            Row = subBuilder;
            break;
          }
          case 26: {
            global::LinNet.TestDatasetRespWithLineage.Types.RowResponse subBuilder = new global::LinNet.TestDatasetRespWithLineage.Types.RowResponse();
            if (resultCase_ == ResultOneofCase.RowResponse) {
              subBuilder.MergeFrom(RowResponse);
            }
            input.ReadMessage(subBuilder);
            RowResponse = subBuilder;
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the TestDatasetRespWithLineage message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class RowResponse : pb::IMessage<RowResponse> {
        private static readonly pb::MessageParser<RowResponse> _parser = new pb::MessageParser<RowResponse>(() => new RowResponse());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<RowResponse> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::LinNet.TestDatasetRespWithLineage.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public RowResponse() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public RowResponse(RowResponse other) : this() {
          row_ = other.row_.Clone();
          rowLineage_ = other.rowLineage_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public RowResponse Clone() {
          return new RowResponse(this);
        }

        /// <summary>Field number for the "row" field.</summary>
        public const int RowFieldNumber = 1;
        private static readonly pb::FieldCodec<global::LinNet.TestDatasetResp> _repeated_row_codec
            = pb::FieldCodec.ForMessage(10, global::LinNet.TestDatasetResp.Parser);
        private readonly pbc::RepeatedField<global::LinNet.TestDatasetResp> row_ = new pbc::RepeatedField<global::LinNet.TestDatasetResp>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::LinNet.TestDatasetResp> Row {
          get { return row_; }
        }

        /// <summary>Field number for the "rowLineage" field.</summary>
        public const int RowLineageFieldNumber = 2;
        private static readonly pb::FieldCodec<global::LinNet.RowLineage> _repeated_rowLineage_codec
            = pb::FieldCodec.ForMessage(18, global::LinNet.RowLineage.Parser);
        private readonly pbc::RepeatedField<global::LinNet.RowLineage> rowLineage_ = new pbc::RepeatedField<global::LinNet.RowLineage>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::LinNet.RowLineage> RowLineage {
          get { return rowLineage_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as RowResponse);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(RowResponse other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!row_.Equals(other.row_)) return false;
          if(!rowLineage_.Equals(other.rowLineage_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= row_.GetHashCode();
          hash ^= rowLineage_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          row_.WriteTo(output, _repeated_row_codec);
          rowLineage_.WriteTo(output, _repeated_rowLineage_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          size += row_.CalculateSize(_repeated_row_codec);
          size += rowLineage_.CalculateSize(_repeated_rowLineage_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(RowResponse other) {
          if (other == null) {
            return;
          }
          row_.Add(other.row_);
          rowLineage_.Add(other.rowLineage_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                row_.AddEntriesFrom(input, _repeated_row_codec);
                break;
              }
              case 18: {
                rowLineage_.AddEntriesFrom(input, _repeated_rowLineage_codec);
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
