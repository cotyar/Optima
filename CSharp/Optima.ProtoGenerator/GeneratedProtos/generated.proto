syntax = "proto3";

option csharp_namespace = "LinNet";

import public "lin.proto";
import public "google/protobuf/empty.proto";

package lin.generated.test1;

message TestDataset {
    string field1 = 1;
    int32 field2 = 2;
}

message TestDatasetResp {
    string field1 = 1;
    int32 field2 = 2;
}


service Calc {
    rpc Run (stream TestDataset) returns (stream TestDatasetResp); // End User needs to implement this one only, all others are autogenerated 
    
    rpc RunWithLineage (stream TestDatasetWithLineage) returns (stream TestDatasetRespWithLineage);

    rpc Echo (TestDataset) returns (TestDataset); // Useful for "is alive" validations
}

message TestDatasetWithLineage {
    oneof case {
        TestDataset request = 1;
        lin.DatasetLineage datasetLineage = 2;
    }
}

message TestDatasetRespWithLineage {
    message RowResponse {
        repeated TestDatasetResp row = 1;
        repeated lin.RowLineage rowLineage = 2;
    }

    oneof result {
        lin.DatasetLineage datasetLineage = 1; // First message only
        TestDatasetResp row = 2; 
        RowResponse rowResponse = 3;
    }
}
